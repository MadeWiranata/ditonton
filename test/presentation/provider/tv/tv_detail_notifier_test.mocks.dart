// Mocks generated by Mockito 5.1.0 from annotations
// in aplikasiditonton/test/presentation/provider/tv/tv_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:aplikasiditonton/common/failure.dart' as _i7;
import 'package:aplikasiditonton/domain/entities/tv/tv_detail.dart' as _i13;
import 'package:aplikasiditonton/domain/entities/tv/tv.dart' as _i10;
import 'package:aplikasiditonton/domain/entities/tv/tv_detail.dart' as _i8;
import 'package:aplikasiditonton/domain/repositories/tv/tv_repository.dart'
    as _i4;
import 'package:aplikasiditonton/domain/repositories/tv/tv_repository.dart'
    as _i2;
import 'package:aplikasiditonton/domain/usecases/tv/get_watchlist_status.dart'
    as _i11;
import 'package:aplikasiditonton/domain/usecases/tv/remove_watchlist.dart'
    as _i14;
import 'package:aplikasiditonton/domain/usecases/tv/save_watchlist.dart'
    as _i12;
import 'package:aplikasiditonton/domain/usecases/tv/get_tv_detail.dart' as _i5;
import 'package:aplikasiditonton/domain/usecases/tv/get_tv_recommendations.dart'
    as _i9;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTVRepository_0 extends _i1.Fake implements _i2.TVRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeTVRepository_2 extends _i1.Fake implements _i4.TVRepository {}

/// A class which mocks [GetTVDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDetailTV extends _i1.Mock implements _i5.GetTVDetail {
  MockGetDetailTV() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i8.TVDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: Future<_i3.Either<_i7.Failure, _i8.TVDetail>>.value(
                  _FakeEither_1<_i7.Failure, _i8.TVDetail>()))
          as _i6.Future<_i3.Either<_i7.Failure, _i8.TVDetail>>);
}

/// A class which mocks [GetTVRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetRecommendationsTV extends _i1.Mock
    implements _i9.GetTVRecommendations {
  MockGetRecommendationsTV() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i10.Tv>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: Future<_i3.Either<_i7.Failure, List<_i10.Tv>>>.value(
                  _FakeEither_1<_i7.Failure, List<_i10.Tv>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i10.Tv>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTV extends _i1.Mock
    implements _i11.GetWatchListStatus {
  MockGetWatchListStatusTV() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_2()) as _i4.TVRepository);
  @override
  _i6.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTV extends _i1.Mock implements _i12.SaveWatchlist {
  MockSaveWatchlistTV() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_2()) as _i4.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i13.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTV extends _i1.Mock implements _i14.RemoveWatchlist {
  MockRemoveWatchlistTV() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_2()) as _i4.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i13.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}
